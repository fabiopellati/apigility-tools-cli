<?php

namespace %apiName%\%Version%\Rest\%leftServiceName%Has%rightServiceName%;

use Zend\EventManager\AbstractListenerAggregate;
use Zend\EventManager\Event;
use Zend\EventManager\EventManagerInterface;
use Zend\Router\RouteMatch;
use ZF\Hal\Link\Link;

class HalLinkListener
    extends AbstractListenerAggregate
{
    /**
     * @var \Zend\Router\RouteMatch
     */
    protected $routeMatch;

    public function __construct(RouteMatch $routeMatch)
    {
        $this->routeMatch = $routeMatch;
    }

    public function attach(EventManagerInterface $events, $priority = 1)
    {
        $this->listeners[] = $events->attach('renderEntity', [$this, 'onRenderEntity']);

    }

    public function onRenderEntity(Event $e)
    {

        $halEntity = $e->getParam('entity');
        $entity = $halEntity->getEntity();
        if ($entity instanceof %leftServiceName%Has%rightServiceName%Entity) {
            $links = $halEntity->getLinks();
//            $entity_id = $this->getEntityId($entity);
//            $links->add(
//                Link::factory([
//                                  'rel'   => '%right_service_name%',
//                                  'route' => [
//                                      'name'   => '%api_name%.rest.%right_service_name%',
//                                      'params' => [
//                                          '%entity_identifier_name%' => $entity_id,
//                                      ],
//                                  ],
//                              ])
//            );
//            $associated_id = $this->routeMatch->getParam('%left_service_name%_id');
//            $links->add(
//                Link::factory([
//                                  'rel'   => '%left_service_name%',
//                                  'route' => [
//                                      'name'   => '%api_name%.rest.%left_service_name%',
//                                      'params' => [
//                                          '%route_identifier_name%' => $associated_id,
//                                      ],
//                                  ],
//                              ])
//            );
        }

    }

    /**
     * @param $entity
     *
     * @return mixed
     */
    protected function getEntityId($entity)
    {
        $entityId = $entity['%entityId%'];

        return $entityId;
    }
}
