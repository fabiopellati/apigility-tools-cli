<?php

namespace %apiName%\%Version%\Rest\%serviceName%;

use Laminas\EventManager\AbstractListenerAggregate;
use Laminas\EventManager\Event;
use Laminas\EventManager\EventManagerInterface;
use Laminas\ApiTools\Hal\Link\Link;
use Laminas\Router\RouteMatch;

class HalLinkListener
    extends AbstractListenerAggregate
{
    /**
     * @var \Laminas\Router\RouteMatch
     */
    protected $routeMatch;

    public function __construct(RouteMatch $routeMatch)
    {
        $this->routeMatch = $routeMatch;
    }

    public function attach(EventManagerInterface $events, $priority = 1)
    {
        $this->listeners[] = $events->attach('renderEntity', [$this, 'onRenderEntity']);

    }

    public function onRenderEntity(Event $e)
    {

        $halEntity = $e->getParam('entity');
        $entity = $halEntity->getEntity();
        if ($entity instanceof %serviceName%Entity) {
            $entity_identifier = $this->getEntityIdentifier($entity);
            $links = $halEntity->getLinks();

            /**
             * example link for has association
             *
             */
//            $links->add(
//                Link::factory([
//                                  'rel'   => 'right_service',
//                                  'route' => [
//                                      'name'   => 'api_name.rest.left_service_has_right_service',
//                                      'params' => [
//                                          'right_service_id' => $entity_identifier,
//                                      ],
//                                  ],
//                              ])
//            );
        }

    }

    /**
     * @param $entity
     *
     * @return mixed
     */
    protected function getEntityIdentifier($entity)
    {
        $entityIdentifier = $entity['%entity_identifier_name%'];

        return $entityIdentifier;
    }

}
